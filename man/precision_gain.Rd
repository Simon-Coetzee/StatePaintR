% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prg.R
\name{precision_gain}
\alias{precision_gain}
\title{Precision Gain}
\usage{
precision_gain(TP, FN, FP, TN)
}
\arguments{
\item{TP}{number of true positives, can be a vector}

\item{FN}{number of false negatives, can be a vector}

\item{FP}{number of false positives, can be a vector}

\item{TN}{number of true negatives, can be a vector}
}
\value{
Precision Gain (a numeric value less than or equal to 1; or -Inf or NaN, see the details below)
}
\description{
This function calculates Precision Gain from the entries of the contingency table: number of true positives (TP), false negatives (FN), false positives (FP), and true negatives (TN). More information on Precision-Recall-Gain curves and how to cite this work is available at http://www.cs.bris.ac.uk/~flach/PRGcurves/.
}
\details{
Precision Gain (PrecGain) quantifies by how much precision is improved over the default precision of the always positive predictor, equal to the proportion of positives (pi). PrecGain=1 stands for maximal improvement (Prec=1) and PrecGain=0 stands for no improvement (Prec=pi). If Prec=0, then PrecGain=-Inf. It can happen that PrecGain=NaN, for instance if there are no positives (TP=0 and FN=0) and TN>0.
}
\examples{
precision_gain(3,0,1,2)
# [1] 0.6666667
TP = c(0,2,3)
FN = 3-TP
FP = c(0,1,2)
TN = 2-FP
precision_gain(TP,FN,FP,TN)
# [1]  NaN 0.25 0.00
}
